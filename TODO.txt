TODO TURMITE SIM:

- schließen von files in den entsprechenden methoden überprüfen

- framecount_ overflow auf lange sicht -> problem?

- framerate durch speedcontroller kontrollieren, granularität
    beim übergang von rendercap zu delay beachten
    
- speedcontroller ist guter kandidat für tests mit gemockter render funktion

- colormap parser für über konsolo angegebene colormap files implementieren
    
- view refactoren, signal mechanismus vernünftig machen

- konsolen interface vereinheitlichen
    -> dazu klasse für logging ausgaben, die bei -logging_on auf die konsole ausgibt

- namespaces aufräumen

- versionsinfo zu gespeicherten turmites hinzufügen

- zum zeichnen: in textur zeichnen, scaling factor für kopieren auf bildschirm benutzen (ZOOM)
    -> dabei möglichkeit, die kamera auf die ameise zu fokussieren und dieser zu folgen
    -> überlegen wie der übergang über die weltecken am besten mit der fokusskamera realisiert werden kann
    -> zunächst: vllt einfach ausserhalb des spiels schwarz rendern, schauen wie das beim übergang aussieht

- Zunächst: Konsoleninput für Speicherpfad, dann kann Turmite speicher implementiert werden


-- Observer Pattern durch boost::signals2 implementieren: 
        https://www.boost.org/doc/libs/1_67_0/doc/html/signals2/tutorial.html
        https://stackoverflow.com/questions/28416088/observer-pattern-via-boost-signal2

    -> Partiell implementierte Observersachen wieder rausnehmen aus den Klassen
    
    (- View als Observer von simulator, immer nur das zuletzt geänderte neu zeichnen!)

-- ZU VIEL DES GUTEN?
- Cell zu Klasse machen, jede Cell wird von einem Observer beobachtet und per notify der view bescheid gegeben


-- Zeitsteuerung implementieren, dazu Kapitel in Design Patterns für Spieleprogrammierer durchlesen


- To String Methode für Turmites


- Input Handling in eigene Klasse auslagern


-- Rendering auf texture ausführen, dann den gezoomten bereich kopieren


## LANGFRISTIG: MENÜ

- Idee: Qt für Menü
    Links zu SDL2 & QT
        https://www.reddit.com/r/gamedev/comments/2t653h/creating_a_basic_game_engine_with_qt_sdl2/
        https://forums.libsdl.org/viewtopic.php?p=39271
        
        
        
        
        
## GANZ LANGRISTIG: RENDERING AUF OBERFLÄCHE VON 3D OBJEKTEN

- z.B. auf Kugel

- vllt verschiedene zustände als höhen darstellen